@model MVC_Project.WebBackend.Models.RegisterViewModel
@using MVC_Project.FlashMessages;
@{
                /**/

                Layout = null;
}
<!DOCTYPE html>
<html>

<head>
    <!-- Google Tag Manager -->
    <script>
        (function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-PLHM5PD');</script>
    <!-- End Google Tag Manager -->

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!--Configuracion Google-->
    <meta name="google-signin-client_id" content="@System.Configuration.ConfigurationManager.AppSettings["Google.ClientId"]">

    <title> @System.Web.Configuration.WebConfigurationManager.AppSettings["AppName"] | Registro </title>

    <link rel="icon" href="~/Images/logos/elevaplus_logotipo_responsive_gradient.png" sizes="192x192" />

    @Styles.Render("~/Content/template/css")

    @Styles.Render("~/font-awesome/css")
    @Scripts.Render("~/font-awesome/js")

    @Styles.Render("~/plugins/sweetAlertStyles")
    @Scripts.Render("~/plugins/sweetAlert")
    @Styles.Render("~/plugins/toastrStyles")
    <link href="~/Content/template/plugins/jasny/jasny-bootstrap.min.css" rel="stylesheet" />
    @*<style>
            #checkTerm-error {
                top: 90%;
                display: inline-table;
                width: 300px;
                position: absolute;
                left: -180%;
            }
        </style>*@


</head>

<body class="gray-bg">
    <!-- Google Tag Manager (noscript) -->
    <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PLHM5PD"
                height="0" width="0" style="display:none;visibility:hidden"></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->

    <div class="middle-box text-center loginscreen   animated fadeInDown">

        <div>
            @*<img src="~/Images/logos/logo_default.png" width="300" />*@
            <img src="~/Images/logos/El20mx-logo-estes-donde-e.png" width="300" />
        </div>
        <div id="btn-social-networks">
            <button type="button" class="btn btn-facebook btn-block full-width m-b" onclick="register()">
                <span>Registrarte con &nbsp;<i class="fa fa-facebook-f"></i></span>
            </button>

            <div class="btn-google">
                <div id="my-signin2" class="g-signin2" data-onsuccess="onSuccess"></div>
                <button type="button" class="btn btn-google btn-block full-width m-b">
                    <span>Registrarte con &nbsp;<i class="fa fa-google"></i></span>
                </button>
            </div>

            <br />
            <div><h5 class="line">O</h5></div>
        </div>
        @*<h3>Register to @System.Web.Configuration.WebConfigurationManager.AppSettings["AppName"]</h3>*@
        <p id="form-title">Registrarte con tu correo electrónico.</p>

        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            <div class="col-lg-12">
                <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
            </div>
        }

        @using (Html.BeginForm("CreateUser", "Register", FormMethod.Post, new { @class = "m-t", role = "form", @id = "RegisterForm" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.TypeRedSocial, new { Value = "" })
            @Html.HiddenFor(m => m.RedSocial, new { Value = false })
            @Html.HiddenFor(m => m.SocialId, new { Value = "" })
            <div class="form-group">
                @*<span class="input-group-addon"><i class="fa fa-user"></i></span>*@
                @Html.TextBoxFor(m => m.FistName, new { @class = "form-control", type = "text", @autocomplete = "off", placeholder = "Nombre(s)" })
            </div>
            <div class="form-group">
                @*<span class="input-group-addon"><i class="fa fa-user"></i></span>*@
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", type = "text", @autocomplete = "off", placeholder = "Apellido(s)" })
            </div>

            <div class="form-group">
                @*<span class="input-group-addon"><i class="fa fa-envelope"></i></span>*@
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control col-md-12", type = "email", @autocomplete = "off", placeholder = @ViewLabels.USERNAME })
            </div>

            <div class="form-group">
                @*<span class="input-group-addon"><i class="fa fa-phone"></i></span>*@
                @Html.EditorFor(m => m.MobileNumber, new { htmlAttributes = new { @class = "form-control", type = "text", data_mask = "9999-99-99-99", removeMaskOnSubmit = true, greedy = false, @autocomplete = "off", placeholder = "Teléfono" } })
            </div>
            <div class="input-group mb-3">
                <span class="input-group-prepend"><button id="view-password" class="btn btn-default" type="button"><i class="fa fa-eye"></i></button></span>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password", @autocomplete = "off", placeholder = @ViewLabels.PASSWORD })
            </div>
            <div class="input-group mb-3">
                <span class="input-group-prepend"><button id="view-password-confirm" class="btn btn-default" type="button"><i class="fa fa-eye"></i></button></span>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", type = "password", @autocomplete = "off", placeholder = @ViewLabels.CONFIRM_NEW_PASSWORD })
            </div>
            <div class="form-group text-center">
                <a href="https://www.el20.mx/privacidad" target="_blank">Acepto t&eacute;rminos y condiciones</a>
                @*<div class="checkbox i-checks"><label> <input type="checkbox"><i></i> Acepto t&eacute;rminos y condiciones </label></div>*@
            </div>
            <button type="button" class="btn btn-color block full-width m-b" onclick="validarDatos();">Registrarse</button>
            <p class="text-center">¿Ya tienes cuenta?  <a class="" href="@Url.Action("Login", "Auth")">Iniciar Sesi&oacute;n</a></p>

        }
    </div>

    <script>
        var UrlLogin = '@Url.Action("ValidateLogin", "Auth")';
    </script>
    <!-- Mainly scripts -->
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/popper.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/custom/Utils")
    <!--Configuración de Google-->
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <script src="~/Scripts/Google.js"></script>
    <!--Configuración de Google-->
    <!--Configuración de facebook-->
    <script>
        var facebookId = '@System.Configuration.ConfigurationManager.AppSettings["Facebook.ClientId"]';
    </script>
    <script src="~/Scripts/Facebook.js"></script>
    <!--Configuración de facebook-->
    <!-- iCheck -->
    @*<script src="~/Scripts/plugins/iCheck/icheck.min.js"></script>*@

    <script src="~/Scripts/plugins/jasny/jasny-bootstrap.min.js"></script>

    @if (Html.TieneMensaje())
    {
        var mensaje = @Html.ObtenerMensaje();
        <script type="text/javascript">

            toastr['@mensaje.Tipo']('@mensaje.Mensaje',null,{ 'positionClass': '@mensaje.Posicion'});
        </script>
    }

    <script>
        $.validator.addMethod("PasswordTrue",
            function (value, element) {
                //return value.match(/^(?=.*\d)(?=.*\W+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/); // contraseña con caracter especial
                return value.match(/^(?=.*\d)(?=.*[A-Z])(?=.*[a-z]).*$/);
            }, "La contraseña debe contener un número, mayúsculas y minúsculas"
        );
        //$.validator.addMethod("PhoneTrue",
        //    function (value, element) {
        //        return value.match(/^[0-9]{10}$/);
        //    }, "El teléfono no es válido"
        //);
        $.validator.addMethod("ConfirmPassEqPassword",
            function (value, element) {
                return value == $("#Password").val();
            }, "Las contraseñas no coinciden"
        );
        $.validator.addMethod("ConfirmTermTrue",
            function (value, element) {
                return $("input[type='checkbox']").is(":checked")
            }, ""
        );

        $("#RegisterForm").validate({
            rules: {
                FistName: {
                    required: true,
                },
                LastName: {
                    required: true,
                },
                Email: {
                    required: true,
                },
                MobileNumber: {
                    required: true,
                },
                Password: {
                    PasswordTrue: true,
                    ConfirmPassEqPassword: true,
                    required: true,
                    minlength: 8
                },
                ConfirmPassword: {
                    ConfirmPassEqPassword: true,
                    required: true,
                },

                //checkTerm: {
                //    ConfirmTermTrue: true,
                //    required: true,
                //}
            }
            ,
            messages: {
                FistName: {
                    required: "Campo obligatorio",
                },
                LastName: {
                    required: "Campo obligatorio",
                },
                Email: {
                    required: "Campo obligatorio",
                    email: "Ingrese un correo válido"
                },
                MobileNumber: {
                    required: "Campo obligatorio",
                },
                Password: {
                    required: "Campo obligatorio",
                    minlength: "La contraseña debe ser mínimo de 8 caracteres",
                },
                ConfirmPassword: {
                    required: "Campo obligatorio",
                },

                //checkTerm: {
                //    required: "Campo obligatorio",
                //}
            }
        });

        $(document).ready(function () {
            //$('.i-checks').iCheck({
            //    checkboxClass: 'icheckbox_square-green',
            //    radioClass: 'iradio_square-green',
            //});

            //$("input[type='checkbox']").attr({ "id": "checkTerm", "name": "checkTerm" });

            $('#view-password').on('mousedown', function () {
                $('#Password').attr("type", "text");
            });

            $('#view-password').on('mouseup mouseleave', function () {
                $('#Password').attr("type", "password");
            });

            $('#view-password-confirm').on('mousedown', function () {
                $('#ConfirmPassword').attr("type", "text");
            });

            $('#view-password-confirm').on('mouseup mouseleave', function () {
                $('#ConfirmPassword').attr("type", "password");
            });

        });

        function validarDatos() {
            if (!$('#RegisterForm').valid()) {
                return;
            }
            El20Utils.mostrarCargador();
            $('#RegisterForm').submit();
        }

                        //jQuery.extend(jQuery.validator.messages, {
                            //required: "This field is required.",
                            //remote: "Please fix this field.",
                            //email: "Ingrese un correo válido.",
                            //url: "Please enter a valid URL.",
                            //date: "Please enter a valid date.",
                            //dateISO: "Please enter a valid date (ISO).",
                            //number: "Please enter a valid number.",
                            //digits: "Please enter only digits.",
                            //creditcard: "Please enter a valid credit card number.",
                            //equalTo: "Please enter the same value again.",
                            //accept: "Please enter a value with a valid extension.",
                            //maxlength: jQuery.validator.format("Please enter no more than {0} characters."),
                            //minlength: jQuery.validator.format("Please enter at least {0} characters."),
                            //rangelength: jQuery.validator.format("Please enter a value between {0} and {1} characters long."),
                            //range: jQuery.validator.format("Please enter a value between {0} and {1}."),
                            //max: jQuery.validator.format("Please enter a value less than or equal to {0}."),
                            //min: jQuery.validator.format("Please enter a value greater than or equal to {0}.")
                        //});
    </script>

</body>
</html>
