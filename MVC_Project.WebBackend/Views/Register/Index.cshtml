@model MVC_Project.WebBackend.Models.RegisterViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!--Configuracion Google-->
    <meta name="google-signin-scope" content="profile email">
    <meta name="google-signin-client_id" content="765148629644-ehqbkj60uuotg1tb7ofe66jjf7j8gaut.apps.googleusercontent.com">
    <!--Configuracion Google-->
    <title> @System.Web.Configuration.WebConfigurationManager.AppSettings["AppName"] | Registro </title>

    @Styles.Render("~/Content/template/css")

    @Styles.Render("~/font-awesome/css")
    @Scripts.Render("~/font-awesome/js")

    @Styles.Render("~/plugins/sweetAlertStyles")
    @Scripts.Render("~/plugins/sweetAlert")
    <link href="~/Content/template/plugins/jasny/jasny-bootstrap.min.css" rel="stylesheet" />
    @*<style>
            #checkTerm-error {
                top: 90%;
                display: inline-table;
                width: 300px;
                position: absolute;
                left: -180%;
            }
        </style>*@


</head>

<body class="gray-bg">

    <div class="middle-box text-center loginscreen   animated fadeInDown">

        <div>
            @*<img src="~/Images/logos/logo_default.png" width="300" />*@
            <img src="~/Images/logos/El20mx-logo-estes-donde-e.png" width="300" />
        </div>
        <div id="btn-social-networks">
            <button type="button" class="btn btn-facebook btn-block full-width m-b" onclick="register()">
                <span>Registrarte con &nbsp;<i class="fa fa-facebook-f"></i></span>
            </button>

            <div class="btn-google">
                <div id="my-signin2" class="g-signin2" data-onsuccess="onSuccess"></div>
                <button type="button" class="btn btn-google btn-block full-width m-b">
                    <span>Resitrarte con &nbsp;<i class="fa fa-google"></i></span>
                </button>
            </div>

            <br />
            <div><h5 class="line">O</h5></div>
        </div>
        @*<h3>Register to @System.Web.Configuration.WebConfigurationManager.AppSettings["AppName"]</h3>*@
        <p id="form-title">Registrarte con tu correo electrónico.</p>

        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            <div class="col-lg-12">
                <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
            </div>
        }

        @using (Html.BeginForm("CreateAccount", "Register", FormMethod.Post, new { @class = "m-t", role = "form", @id = "RegisterForm" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.TypeRedSocial, new { Value = "" })
            @Html.HiddenFor(m => m.RedSocial, new { Value = false })
            @Html.HiddenFor(m => m.SocialId, new { Value = "" })
            <div class="form-group">
                @Html.TextBoxFor(m => m.FistName, new { @class = "form-control", type = "text", @autocomplete = "off", placeholder = "Nombre(s)", @required = "required" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", type = "text", @autocomplete = "off", placeholder = "Apellido(s)", @required = "required" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", @autocomplete = "off", placeholder = @ViewLabels.USERNAME, @required = "required" })
            </div>
            <div class="form-group">
                @Html.EditorFor(m => m.MobileNumber, new { htmlAttributes = new { @class = "form-control", type = "text", data_mask = "9999-99-99-99", removeMaskOnSubmit = true, greedy = false, @autocomplete = "off", placeholder = "Teléfono", @required = "required" } })
            </div>
            <div class="form-group">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password", @autocomplete = "off", placeholder = @ViewLabels.PASSWORD, @required = "required" })
            </div>
            <div class="form-group">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", type = "password", @autocomplete = "off", placeholder = @ViewLabels.CONFIRM_NEW_PASSWORD, @required = "required" })
            </div>
            <div class="form-group">
                <a href="#">Acepto t&eacute;rminos y condiciones</a>
                @*<div class="checkbox i-checks"><label> <input type="checkbox"><i></i> Acepto t&eacute;rminos y condiciones </label></div>*@
            </div>
            <button type="button" class="btn btn-color block full-width m-b" onclick="validarDatos();">Registrarse</button>
            <p class="text-center">¿Ya tienes cuenta?  <a class="" href="@Url.Action("Login", "Auth")">Iniciar Sesi&oacute;n</a></p>

        }
    </div>
    
    <script>
        var UrlLogin = '@Url.Action("ValidateLogin", "Auth")';
    </script>
    <!-- Mainly scripts -->
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/popper.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    @Scripts.Render("~/plugins/validate")
    <!--Configuración de Google-->
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <script src="~/Scripts/Google.js"></script>
    <!--Configuración de Google-->
    <!--Configuración de facebook-->
    <script src="~/Scripts/Facebook.js"></script>
    <!--Configuración de facebook-->
    <!-- iCheck -->
    @*<script src="~/Scripts/plugins/iCheck/icheck.min.js"></script>*@

    <script src="~/Scripts/plugins/jasny/jasny-bootstrap.min.js"></script>
    <script>
        $.validator.addMethod("PasswordTrue",
            function (value, element) {
                return value.match(/^(?=.*\d)(?=.*\W+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/);
            }, "La contraseña debe contener al menos un número, mayúsculas, minúsculas y caracteres especiales"
        );
        //$.validator.addMethod("PhoneTrue",
        //    function (value, element) {
        //        return value.match(/^[0-9]{10}$/);
        //    }, "El teléfono no es válido"
        //);
        $.validator.addMethod("ConfirmPassEqPassword",
            function (value, element) {
                return value == $("#Password").val();
            }, "las contraseñas no coinciden"
        );
        $.validator.addMethod("ConfirmTermTrue",
            function (value, element) {
                return $("input[type='checkbox']").is(":checked")
            }, ""
        );

        $("#RegisterForm").validate({
            rules: {
                FistName: {
                    required: true,
                },
                LastName: {
                    required: true,
                },
                Email: {
                    required: true,
                },
                MobileNumber: {
                    required: true,
                },
                Password: {
                    PasswordTrue: true,
                    ConfirmPassEqPassword: true,
                    required: true,
                    minlength: 8
                },
                ConfirmPassword: {
                    ConfirmPassEqPassword: true,
                    required: true,
                },

                //checkTerm: {
                //    ConfirmTermTrue: true,
                //    required: true,
                //}
            }
            ,
            messages: {
                FistName: {
                    required: "Campo obligatorio",
                },
                LastName: {
                    required: "Campo obligatorio",
                },
                Email: {
                    required: "Campo obligatorio",
                },
                MobileNumber: {
                    required: "Campo obligatorio",
                },
                Password: {
                    required: "Campo obligatorio",
                    minlength: "La contraseña debe ser mínimo de 8 caracteres",
                },
                ConfirmPassword: {
                    required: "Campo obligatorio",
                },
                //checkTerm: {
                //    required: "Campo obligatorio",
                //}
            }
        });

        $(document).ready(function () {
            //$('.i-checks').iCheck({
            //    checkboxClass: 'icheckbox_square-green',
            //    radioClass: 'iradio_square-green',
            //});

            //$("input[type='checkbox']").attr({ "id": "checkTerm", "name": "checkTerm" });
        });

        function validarDatos() {
            if (!$('#RegisterForm').valid()) {
                return;
            }
            $('#RegisterForm').submit();
        }
    </script>

</body>
</html>
