@model MVC_Project.BackendWeb.Models.ResetPassword
@{
    Layout = null;
    ViewBag.Title = "Cambiar contraseña";
}
<!DOCTYPE html>
<html>
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>INSPINIA | Cambiar Contraseña</title>

    <title> @System.Web.Configuration.WebConfigurationManager.AppSettings["AppName"] | @ViewLabels.AUTH_LOGIN_TITLE </title>

    @Styles.Render("~/Content/template/css")


    @Styles.Render("~/font-awesome/css")
    @Scripts.Render("~/font-awesome/js")

    @Styles.Render("~/plugins/sweetAlertStyles")
    @Scripts.Render("~/plugins/sweetAlert")
    <style>
        label.error{
            display:block;
            width: 100%;
        }
        .input-group > .form-control {
            width: 50% !important;
        }
    </style>

</head>
<body class="gray-bg">

    <div class="middle-box text-center loginscreen animated fadeInDown">
        <div>
            <div>
                <img src="~/Images/logos/El20mx-logo-estes-donde-e.png" width="300" />
            </div>
            <h3>@System.Web.Configuration.WebConfigurationManager.AppSettings["AppName"]</h3>

            @if (!string.IsNullOrEmpty(ViewBag.Error))
            {
                <div class="col-lg-12">
                    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
                </div>
            }
            <p>Introduzca una nueva contraseña</p>
            @using (Html.BeginForm("Reset", "Auth", FormMethod.Post, new { @id = "passForm", @class = "m-t", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Uuid)

                @*<span class="help-block"></span>
                    <div class="input-group mb-3">
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password", placeholder = @ViewLabels.PASSWORD, @required = "required" })
                    </div>*@

                <div class="form-group">
                    <span class="help-block"></span>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password", placeholder = "Nueva contraseña", @required = "required" })
                    </div>
                </div>
                @*<br />*@
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", type = "password", placeholder = "Confirmar contraseña", @required = "required" })
                    </div>
                </div>
                @*<br />*@
                <div class="form-group">
                    <span class="help-block"></span>
                    <button type="submit" onclick="CambiarContra();" class="btn btn-color block full-width m-b">Cambiar contraseña</button>
                    <span class="help-block"></span>
                </div>
            }
        </div>
    </div>

    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/popper.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    @Scripts.Render("~/plugins/validate")
    <script>
        $(document).ready(function () {
            $.validator.addMethod("PasswordTrue",
                function (value, element) {
                    return value.match(/^(?=.*\d)(?=.*\W+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/);
                }, "La contraseña debe contener al menos un número, mayúsculas, minúsculas y caracteres especiales"
            );
            $.validator.addMethod("ConfirmPassEqPassword",
                function (value, element) {
                    return value == $("#Password").val();
                }, "las contraseñas no coinciden"
            );
            $.validator.addMethod("ConfirmTermTrue",
                function (value, element) {
                    return $("input[type='checkbox']").is(":checked")
                }, ""
            );
            $("#passForm").validate({
                rules: {
                    Password: {
                        PasswordTrue: true,
                        ConfirmPassEqPassword: true,
                        required: true,
                        minlength: 8
                    },
                    NewPassword: {
                        ConfirmPassEqPassword: true,
                        required: true,
                    },

                    //Password: {
                    //    PasswordTrue: true,
                    //    required: true,
                    //    minlength: 8
                    //},
                    //NewPassword: {
                    //    minlength: 8,
                    //    equalTo: "#Password"
                    //}
                }
                ,
                messages: {
                    Password: {
                        required: "Campo obligatorio",
                        minlength: "La contraseña debe ser mínimo de 8 caracteres",
                    },
                    NewPassword: {
                        required: "Campo obligatorio",
                        minlength: "La contraseña debe ser mínimo de 8 caracteres",
                    },

                    //Password: {
                    //    required:"Campo obligatorio",
                    //    minlength: "La contraseña debe ser mínimo de 8 caracteres",
                    //},
                    //NewPassword: {
                    //    required: "Campo obligatorio",
                    //    minlength: "La contraseña debe ser mínimo de 8 caracteres",
                    //    equalTo: "La contraseña no coincide"
                    //}
                }
            })
        });
        function CambiarContra() {
            var validator = $("#passForm").validate();

            if (!$("#passForm").valid()) {
                return;
            } else {
                $("#passForm").attr('disabled', 'disabled');
            }

        }
    </script>
</body>
</html>


