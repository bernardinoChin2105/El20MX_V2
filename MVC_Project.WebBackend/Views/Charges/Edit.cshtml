@model MVC_Project.WebBackend.Models.ChargeClientEditViewModel
@using MVC_Project.Utils;
@{
    ViewBag.Title = "Administración de Clientes";
    Dictionary<string, object> datePickerAttributes = new Dictionary<string, object>
{
        {"class",  "form-control"},
        {"autocomplete", "none" },
        {"readonly", "readonly"}
    };
    if (!(bool)ViewData["canEditStart"])
    {
        datePickerAttributes["disabled"] = "true";
    }
}
@section styles {
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/template/plugins/switchery/switchery.css")
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("Edit", "Charges", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "EditForm" }))
                    {
                        @Html.HiddenFor(model => model.Uuid)
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Name, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @autocomplete = "none", disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.Name)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.RFC, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.RFC, new { @class = "form-control", @autocomplete = "none", disabled = "true" })
                                    @Html.ValidationMessageFor(model => model.RFC)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.AccountOwner, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.AccountOwner, new { @class = "form-control", @autocomplete = "none", disabled = "true" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.BillingStart, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.BillingStart, "{0:MM/yyyy}", datePickerAttributes)
                                    @Html.ValidationMessageFor(model => model.BillingStart)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Plan, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Plan, Model.PlanList, "Seleccione una opción", new { @class = "chosen-select" })
                                    @Html.ValidationMessageFor(model => model.Plan)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Status, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Status, Model.StatusList, "Seleccione una opción", new { @class = "chosen-select" })
                                    @Html.ValidationMessageFor(model => model.Status)
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="offset-md-2 col-md-8 text-right">
                                    <a href='@Url.Action("Index", "Charges")' class='btn btn-white'><i class="fa fa-times"></i> Cancelar</a>
                                    <button type="submit" value="Guardar" class="btn btn-color"><i class="fa fa-save"></i> Guardar</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/Scripts/plugins/switchery/switchery.js")
    <script type="text/javascript">
        $(document).ready(function () {
            $('.chosen-select').chosen({ width: '100%', "disable_search": true, no_results_text: "Sin resultados para: " });

            //$.validator.addMethod("PasswordTrue",
            //    function (value, element) {
            //        return value.match(/^(?=.*\d)(?=.*\W+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/);
            //    }, "La contraseña debe contener al menos un número, mayúsculas, minúsculas y caracteres especiales"
            //);
            //$("#EditForm").validate({
            //    rules: {
            //        Name: {
            //            required: true,
            //        },
            //        Email: {
            //            required: true,
            //        },
            //        Role: {
            //            required: true,
            //        },
            //        Apellidos: {
            //            required: true,
            //        }
            //    }
            //});
            $('#BillingStart').datepicker({
                keyboardNavigation: false,
                autoclose: true,
                format: "mm/yyyy",
                language: "es",
                minViewMode: "months",
                startDate: new Date()
                ////startDate: DateInit.MinDate
            });

            var init = new Switchery($('.status-select')[0]);
        });

        function validarDatos() {
            if (!$('#EditForm').valid()) {
                return;
            }
            $('#EditForm').submit();
        }
    </script>
}