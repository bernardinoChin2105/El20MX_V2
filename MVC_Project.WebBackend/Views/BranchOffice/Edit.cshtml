@model MVC_Project.WebBackend.Models.BranchOfficeViewModel

@{
    ViewBag.Title = "Sucursales";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("Edit", "BranchOffice", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "EditForm", @enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.id);
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true)
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <h5>General</h5>
                            </div>
                            <div class="ibox-content">
                                <div class="form-group row">
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(model => model.name, new { @class = "col-form-label control-label" })
                                        @Html.TextBoxFor(model => model.name, new { @class = "form-control", required = "required", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.name)
                                    </div>
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(model => model.folio, new { @class = "col-form-label control-label" })
                                        @Html.TextBoxFor(model => model.folio, new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.folio)
                                    </div>
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(model => model.serie, new { @class = "col-form-label control-label" })
                                        @Html.TextBoxFor(model => model.serie, new { @class = "form-control", @readonly = "readonly", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.serie)
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="ibox float-e-margins">
                            <div class="ibox-title">
                                <h5>Domicilio fiscal</h5>
                            </div>
                            <div class="ibox-content">
                                <div class="form-group row">
                                    <div class="col-12 col-md-8">
                                        @Html.LabelFor(m => m.street, new { @class = "col-form-label control-label" })
                                        @Html.TextBoxFor(m => m.street, new { @class = "form-control", @maxlength = "250" })
                                    </div>
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(m => m.outdoorNumber, new { @class = "col-form-label control-label" })
                                        @Html.TextBoxFor(m => m.outdoorNumber, new { @class = "form-control", @maxlength = "100" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(m => m.interiorNumber, new { @class = "col-form-label control-label" })
                                        @Html.TextBoxFor(m => m.interiorNumber, new { @class = "form-control", @maxlength = "20" })
                                    </div>
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(m => m.zipCode, new { @class = "col-form-label control-label" })
                                        @Html.TextBoxFor(m => m.zipCode, new { @class = "form-control", @maxlength = "5" })
                                    </div>
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(m => m.colony, new { @class = "col-form-label control-label" })
                                        @Html.DropDownListFor(m => m.colony, Model.listColony, new { @class = "form-control" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(m => m.municipality, new { @class = "col-form-label control-label" })
                                        @Html.DropDownListFor(m => m.municipality, Model.listMunicipality, new { @class = "form-control" })
                                    </div>
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(m => m.state, new { @class = "col-form-label control-label" })
                                        @Html.DropDownListFor(m => m.state, Model.listState, new { @class = "form-control" })
                                    </div>
                                    <div class="col-12 col-md-4">
                                        @Html.LabelFor(m => m.country, new { @class = "col-form-label control-label" })
                                        @Html.DropDownListFor(m => m.country, Model.listCountry, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row pull-right">
                            <div class="col-md-8 offset-2 text-right">
                                <a href='@Url.Action("Index", "BranchOffice")' class='btn btn-white'><i class="fa fa-times"></i> Cancelar</a>
                                <button type="button" id="btn-save" class="btn btn-color"> <i class="fa fa-save"></i> Guardar </button>
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/plugins/datapicker/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/plugins/datapicker/bootstrap-datepicker.es.js"></script>
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.13.4/jquery.mask.min.js"></script>*@
    <script src="~/Scripts/plugins/touchspin/jquery.bootstrap-touchspin.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.chosen-select').chosen({ width: '100%', no_results_text: "Sin resultados para " });

            $(".view-ciec").mouseup(function () {
                $(".view-ciec-input").attr('type', 'password').data("view", false);
            }).mousedown(function () {
                if ($(".view-ciec-input").val() !== "") {
                    $(".view-ciec-input").attr('type', 'text').data("view", true);
                }
                });

            $(".view-e-firma").mouseup(function () {
                $(".view-e-firma-input").attr('type', 'password').data("view", false);
            }).mousedown(function () {
                if ($(".view-e-firma-input").val() !== "") {
                    $(".view-e-firma-input").attr('type', 'text').data("view", true);
                }
                });

            $('.custom-file-input').on('change', function (e) {
                let fileName = $(this).val().split('\\').pop();
                $(this).next('.custom-file-label').addClass("selected").html(fileName);
            });

             var mem = $('#data_1 .input-group.date').datepicker({
                //dateFormat: "yy-mm-dd"
                keyboardNavigation: false,
                todayBtn: "linked",
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: "dd/mm/yyyy",
                language: "es"
            });

            $.validator.addMethod("Alphanumeric",
                function (value, element) {
                    return value.match(/^[A-Za-zÀ-ÿ\u00f1\u00d10-9 _.-]+$|^$/);
                }, "El campo debe ser alfanumérico"
            );

            $.validator.addMethod("Numeric",
                function (value, element) {
                    return value.match(/^[0-9]+$|^$/);
                }, "El campo debe ser numérico"
            );

            $.validator.addMethod("Alphabetic",
                function (value, element) {
                    return value.match(/^[a-zA-ZÀ-ÿ\u00f1\u00d1 ]+$|^$/);
                }, "El campo debe ser alfabético"
            );
            $("#EditForm").validate({
                rules: {
                    zipCode: {
                        required: true,
                        Numeric: true
                    },
                    street: {
                        Alphanumeric: true,
                    },
                    outdoorNumber: {
                        Alphanumeric: true,
                    },
                    interiorNumber: {
                        Alphanumeric: true,
                    }
                }
            });
            
            if ($('#hasDeferredPayment').prop("checked")) {
                $("#partialitiesNumber").prop('readonly', false);
                $("#advancePayment").prop('readonly', false);
                $(".btn-opt").prop("disabled", false);
            } else {
                $("#partialitiesNumber").val(1);
                $("#advancePayment").val(0);
                $("#monthlyCharge").val($("#total").val());
                $("#partialitiesNumber").prop('readonly', true);
                $("#advancePayment").prop('readonly', true);
                $(".btn-opt").prop("disabled", true);
            }

        });

        $("#btn-save").on("click", function () {
            if (!$('#EditForm').valid()) {
                return;
            }
            $('#EditForm').submit();
        });
        
        $("#hasDeferredPayment").on("ifChanged", function () {
            if (this.checked) {
                $("#partialitiesNumber").prop('readonly', false);
                $("#advancePayment").prop('readonly', false);
                $(".btn-opt").prop("disabled", false);
            }
            else {
                $("#partialitiesNumber").val(1);
                $("#advancePayment").val(0);
                $("#monthlyCharge").val($("#total").val());
                $("#partialitiesNumber").prop('readonly', true);
                $("#advancePayment").prop('readonly', true);
                $(".btn-opt").prop("disabled", true);
            }
        });

        $("#zipCode").blur(function () {
            //console.log("perdio el focus");
            var value = $(this).val();
            if (!value) {
                ClearCombos();
                return;
            }
            var cmbColony = $("#colony");
            var cmbMunicipality = $("#municipality");
            var cmbState = $("#state");
            var cmbCountry = $("#country");
            //console.log("valor", value);

            $.ajax({
                type: 'Get',
                async: true,
                data: { zipCode: value },
                url: '@Url.Action("GetLocations")',
                success: function (json) {
                    //console.log(json, "respuesta");
                    if (json.Data.success) {
                        var datos = json.Data.data;
                        if (datos.length > 0) {
                            //console.log(datos, "que esta aquí");
                            cmbState.val(datos[0].stateId);

                            //Llenado de Países
                            cmbCountry.html('<option value="-1">Seleccione...</option>');
                            cmbCountry.append('<option value="' + datos[0].countryId + '">' + datos[0].nameCountry + '</option>');
                            cmbCountry.val(datos[0].countryId);

                            //Llenado de municipios
                            //console.log(datos[0], "registro 0");
                            cmbMunicipality.html('<option value="-1">Seleccione...</option>');
                            cmbMunicipality.append('<option value="' + datos[0].municipalityId + '">' + datos[0].nameMunicipality + '</option>');
                            cmbMunicipality.val(datos[0].municipalityId);

                            //Llenado de colonias
                            cmbColony.html('<option value="-1">Seleccione...</option>');
                            cmbColony.append(datos.map(function (data, index) {
                                return $('<option value="' + data.id + '">' + data.nameSettlementType + ' ' + data.nameSettlement + '</option>');
                            }));
                            cmbColony.val(datos[0].id);
                        } else {
                            ClearCombos();
                            toastr["error"]("El registro de Código Postal no se encontró en la base de datos");
                        }

                    } else {
                        ClearCombos();
                        toastr["error"]("El registro de Código Postal no se encontró en la base de datos");
                    }

                },
                error: function (xhr) {
                    ClearCombos();
                    console.log('error');
                }
            });

            function ClearCombos() {
                var cmbColony = $("#colony");
                var cmbMunicipality = $("#municipality");
                var cmbState = $("#state");
                var cmbCountry = $("#country");

                cmbState.val(-1);
                cmbCountry.html('<option value="-1">Seleccione...</option>').val(-1);
                cmbMunicipality.html('<option value="-1">Seleccione...</option>').val(-1);
                cmbColony.html('<option value="-1">Seleccione...</option>').val(-1);
            }
        });
    </script>
}
