@model MVC_Project.WebBackend.Models.BranchOfficeViewModel

@{
    ViewBag.Title = "Sucursales";
}

@section Styles {
    <link href="~/Content/template/plugins/cropper/cropper.min.css" rel="stylesheet" />
    <style>
        /* Limit image width to avoid overflow the container */
        img {
            max-width: 100%; /* This rule is very important, please do not ignore this! */
        }

        .label {
            cursor: pointer;
        }

        .progress {
            display: none;
            margin-bottom: 1rem;
        }

        .alert {
            display: none;
        }

        .img-container img {
            max-width: 100%;
        }
    </style>
    <link href="~/Content/template/plugins/iCheck/skins/square/blue.css" rel="stylesheet" />
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Crear</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("Create", "BranchOffice", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "CreateForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.id)
                        @Html.HiddenFor(x => x.uuid)
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            <div class="ibox float-e-margins">
                                <div class="ibox-title">
                                    <h5>General</h5>
                                </div>
                                <div class="ibox-content">
                                    @*<div class="form-group row">
                                        <div class="col-12 col-md-4">

                                        </div>
                                        <div class="col-12 col-md-4">

                                        </div>
                                        <div class="col-12 col-md-4 text-right">
                                            <label class="label" data-toggle="tooltip" title="Cambiar logo para facturación" data-original-title="Cambiar logo para facturación">
                                                <img id="avatar" src="@Model.logo" width="160" height="160" style="background-color:#e9ecef">
                                                <input type="file" class="sr-only" id="input" name="image" accept="image/*">
                                            </label>
                                        </div>
                                    </div>*@
                                    <div class="form-group row">
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(model => model.name, new { @class = "col-form-label control-label" })
                                            @Html.TextBoxFor(model => model.name, new { @class = "form-control", required = "required", @autocomplete = "off" })
                                            @Html.ValidationMessageFor(model => model.name)
                                        </div>
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(model => model.folio, new { @class = "col-form-label control-label" })
                                            @Html.TextBoxFor(model => model.folio, new { @class = "form-control", @autocomplete = "off" })
                                            @Html.ValidationMessageFor(model => model.folio)
                                        </div>
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(model => model.serie, new { @class = "col-form-label control-label" })
                                            @Html.TextBoxFor(model => model.serie, new { @class = "form-control", @autocomplete = "off" })
                                            @Html.ValidationMessageFor(model => model.serie)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="ibox float-e-margins">
                                <div class="ibox-title">
                                    <h5>Domicilio fiscal</h5>
                                </div>
                                <div class="ibox-content">
                                    <div class="form-group row">
                                        <div class="col-12 col-md-8">
                                            @Html.LabelFor(m => m.street, new { @class = "col-form-label control-label" })
                                            @Html.TextBoxFor(m => m.street, new { @class = "form-control", @maxlength = "250" })
                                        </div>
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(m => m.outdoorNumber, new { @class = "col-form-label control-label" })
                                            @Html.TextBoxFor(m => m.outdoorNumber, new { @class = "form-control", @maxlength = "100" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(m => m.interiorNumber, new { @class = "col-form-label control-label" })
                                            @Html.TextBoxFor(m => m.interiorNumber, new { @class = "form-control", @maxlength = "20" })
                                        </div>
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(m => m.zipCode, new { @class = "col-form-label control-label" })
                                            @Html.TextBoxFor(m => m.zipCode, new { @class = "form-control", @maxlength = "5" })
                                        </div>
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(m => m.colony, new { @class = "col-form-label control-label" })
                                            @Html.DropDownListFor(m => m.colony, Model.listColony, new { @class = "form-control" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(m => m.municipality, new { @class = "col-form-label control-label" })
                                            @Html.DropDownListFor(m => m.municipality, Model.listMunicipality, new { @class = "form-control" })
                                        </div>
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(m => m.state, new { @class = "col-form-label control-label" })
                                            @Html.DropDownListFor(m => m.state, Model.listState, new { @class = "form-control" })
                                        </div>
                                        <div class="col-12 col-md-4">
                                            @Html.LabelFor(m => m.country, new { @class = "col-form-label control-label" })
                                            @Html.DropDownListFor(m => m.country, Model.listCountry, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row pull-right">
                                <div class="col-md-8 offset-2 text-right">
                                    <a href='@Url.Action("Index", "BranchOffice")' class='btn btn-white'><i class="fa fa-times"></i> Cancelar</a>
                                    <button type="button" id="btn-save" class="btn btn-color"> <i class="fa fa-save"></i> Guardar </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalLabel">Ajustar imagen</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="img-container">
                        <img id="image" src="">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-color" id="crop">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/plugins/datapicker/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/plugins/datapicker/bootstrap-datepicker.es.js"></script>
    <script src="~/Scripts/plugins/touchspin/jquery.bootstrap-touchspin.min.js"></script>
    <script src="~/Scripts/plugins/cropper/cropper1.js"></script>
    <script src="~/Scripts/views/BranchOffice/Create.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var controller = new BranchOfficeCreateController('@Url.Action("UpdateLogo")', '@Url.Action("GetLocations")');
            controller.init();
        });
    </script>
}
