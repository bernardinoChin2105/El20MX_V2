@model MVC_Project.WebBackend.Models.LoginSATViewModel
@{
    ViewBag.Title = "Registrar RFC";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Ingrese su RFC y CIEC, haremos una consulta al SAT para validar su información</h5>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("CreateCredential", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "RegisterRFCForm" }))
                    {

                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            <div class="form-group row">
                                @*@Html.LabelFor(model => model.RFC, new { @class = "col-form-label col-md-2 control-label" })*@
                                <label class="col-form-label col-md-2 control-label">
                                    RFC <abbr title="RFC"><i class="fa fa-question-circle"></i></abbr>
                                </label>
                                <div class="col-md-8">                                    
                                    @Html.TextBoxFor(model => model.RFC, new { @class = "form-control", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.RFC)
                                    @*<input id="rfc" name="rfc" type="text" class="form-control required" aria-required="true" autocomplete="off" onkeyup="javascript:this.value=this.value.toUpperCase();">*@
                                    @*@Html.ValidationMessageFor(model => model.Name)*@
                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-form-label col-md-2 control-label">
                                    CIEC <abbr title="Esta es la contraseña o CIEC fortalecida"><i class="fa fa-question-circle"></i></abbr>
                                </label>
                                @*@Html.LabelFor(model => model.CIEC, new { @class = "col-form-label col-md-2 control-label" })*@
                                <div class="col-md-8">                                    
                                    <div class="input-group">
                                        <div class="input-group-append viewpass">
                                            <span class="input-group-text" title="Ver contraseña">
                                                <i class="fa fa-eye"></i>
                                            </span>
                                        </div>
                                        @Html.PasswordFor(model => model.CIEC, new { @class = "form-control viewpass-input", @autocomplete = "off", @minlength = "8", @maxlength = "20" })
                                        @Html.ValidationMessageFor(model => model.CIEC)
                                        @*<input id="password" name="password" type="password" class="form-control required viewpass-input" data-view="false" aria-required="true" minlength="8" maxlength="20">*@
                                    </div>
                                </div>
                            </div>


                            <div class="form-group row">
                                <div class="offset-md-2 col-md-8 text-right">

                                    <a href='@Url.Action("Index", "Account")' class='btn btn-white'><i class="fa fa-times"></i> Cancelar</a>
                                    <button type="button" value="Crear" class="btn btn-color" onclick="validarDatos();"><i class="fa fa-save"></i> Validar RFC</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/plugins/cropper/cropper.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            //var input = $(".viewpass-input");
            $(".viewpass").mouseup(function () {
                $(".viewpass-input").attr('type', 'password').data("view", false);
            }).mousedown(function () {
                if ($(".viewpass-input").val() !== "") {
                    $(".viewpass-input").attr('type', 'text').data("view", true);
                }
            });

            $.validator.addMethod("PasswordTrue",
                function (value, element) {
                    return value.match(/^(?=.*\d)(?=.*\W+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/);
                }, "La contraseña debe contener al menos un número, mayúsculas, minúsculas y caracteres especiales"
            );
            $.validator.addMethod("ConfirmPassEqPassword",
                function (value, element) {
                    return value == $("#Password").val();
                }, "las contraseñas no coinciden"
            );
            $.validator.addMethod("RFCTrue",
                function (value, element) {
                    return value.match(/^([A-ZÑ&]{3,4}) ?(?:- ?)?(\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\d|3[01])) ?(?:- ?)?([A-Z\d]{2})([A\d])$/);
                }, "Debe ser un RFC válido"
            );

            $("#RegisterRFCForm").validate({
                rules: {
                    RFC: {
                        required: true,
                        RFCTrue: true
                    },
                    CIEC: {
                        required: true
                        //minlength: 8
                    }
                }
            });
        });
        function validarDatos() {
            if (!$('#RegisterRFCForm').valid()) {
                return;
            }
            $('#RegisterRFCForm').submit();
        }
    </script>
}
