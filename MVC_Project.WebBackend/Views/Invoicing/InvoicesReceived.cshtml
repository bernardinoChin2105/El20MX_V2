@model MVC_Project.WebBackend.Models.InvoicesFilter
@using MVC_Project.WebBackend.AuthManagement
@using MVC_Project.WebBackend.AuthManagement.Models
@using MVC_Project.FlashMessages
@{
    ViewBag.Title = "Facturas de mis proveedores";

    var controllerName = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    AuthUser user = (AuthUser)Authenticator.AuthenticatedUser;
    var hasFullAccessController = user.HasFullAccessController(controllerName);
    Posicion pos = Posicion.Arriba_centrado;
    var flashMessage = new MensajeFlash { Posicion = pos.ObtenerPosicion() };
    var position = "'" + flashMessage.Posicion + "'";
}

@section styles {
    @Styles.Render("~/plugins/daterangepickerStyles")
    <style>
        .hide {
            display: none;
        }
    </style>
}

<div class="wrapper wrapper-content content-padding animated fadeInRight">
    <div class="ibox float-e-margins box-degradient">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    @using (Html.BeginForm("GetInvoices", "Provider", FormMethod.Post, new { @id = "SearchForm" }))
                    {
                        @*<div class="ibox-title">
                            <h5>Búsqueda</h5>
                        </div>*@
                        <div class="ibox-content clearfix">
                            <div class="row">
                                <div class="col-12 col-sm-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(m => m.Folio, new { @class = "" })*@
                                        <br />
                                        @Html.TextBoxFor(m => m.Folio, new { @Class = "form-control form-control-sm input-text txtFiltro", filtro = "true", filtro_order = "1", @maxlength = "13", @autocomplete = "off", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(x => x.Folio).ToHtmlString()) })
                                    </div>
                                </div>
                                <div class="col-12 col-sm-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(m => m.Serie, new { @class = "" })*@
                                        <br />
                                        @Html.TextBoxFor(m => m.Serie, new { @Class = "form-control form-control-sm input-text txtFiltro", filtro = "true", filtro_order = "1", @maxlength = "13", @autocomplete = "off", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(x => x.Serie).ToHtmlString()) })
                                    </div>
                                </div>
                                <div class="col-12 col-sm-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(m => m.RFCP, new { @class = "" })*@
                                        <br />
                                        @Html.TextBoxFor(m => m.RFCP, new { @Class = "form-control form-control-sm input-text txtFiltro typeahead_2", filtro = "true", filtro_order = "1", @maxlength = "13", @autocomplete = "off", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(x => x.RFCP).ToHtmlString()) })
                                    </div>
                                </div>
                                <div class="col-12 col-sm-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(m => m.NombreRazonSocial, new { @class = "" })*@
                                        <br />
                                        @Html.TextBoxFor(m => m.NombreRazonSocial, new { @Class = "form-control form-control-sm input-text txtFiltro", filtro = "true", filtro_order = "1", @maxlength = "13", @autocomplete = "off", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(x => x.NombreRazonSocial).ToHtmlString()) })
                                    </div>
                                </div>
                                <div class="col-12 col-md-3">
                                    @Html.LabelFor(m => m.PaymentMethod, new { @class = "" })
                                    @Html.DropDownListFor(m => m.PaymentMethod, Model.ListPaymentMethod.Items as List<SelectListItem>, new { @class = "chosen-select" })
                                    <div class="form-group"></div>
                                </div>
                                <div class="col-12 col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PaymentForm, new { @class = "" })
                                        @Html.DropDownListFor(m => m.PaymentForm, Model.ListPaymentForm.Items as List<SelectListItem>, new { @class = "chosen-select" })
                                    </div>
                                </div>
                                <div class="col-12 col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Currency, new { @class = "" })
                                        @Html.DropDownListFor(m => m.Currency, Model.ListCurrency.Items as List<SelectListItem>, new { @class = "chosen-select" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-lg-3">
                                    <div class="form-group">
                                        @*col-form-label control-label col-md-2*@
                                        @*@Html.LabelFor(m => m.RegisterAt, new { @class = "" })*@
                                        @Html.TextBoxFor(m => m.RegisterAt, new { @Class = "form-control form-control-sm input-text txtFiltro", @readonly = "readonly", @value = "", placeholder = HttpUtility.HtmlDecode(Html.DisplayNameFor(x => x.RegisterAt).ToHtmlString()) })
                                        @Html.EditorFor(x => x.FilterInitialDate, new { htmlAttributes = new { @Class = "form-control-sm form-control hide", id = "FilterInitialDate", @readonly = "readonly", filtro = "true", filtro_order = "1" } })
                                        @Html.EditorFor(x => x.FilterEndDate, new { htmlAttributes = new { @Class = "form-control-sm form-control hide", id = "FilterEndDate", @readonly = "readonly", filtro = "true", filtro_order = "2" } })
                                    </div>
                                </div>
                                <div class="col-12 col-sm-5 col-lg-5">
                                    <br />
                                    <button type="button" class="btn btn-sm btn-button btn-filter-rol"><i class="fas fa-search"></i> Buscar</button>
                                    &nbsp;
                                    <button type="button" id="btnClearForm" class="btn btn-sm btn-button"><i class="fas fa-eraser "></i> Limpiar</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        @*<h5>Resultado</h5>*@
                        <div class="ibox-tools">
                            <button type="button" class="btn btn-sm btn-button btn-export" data-export-url="@Url.Action("ExportInvoicesReceived", "Invoicing")"><span class="fas fa-download"></span> Exportar</button>
                        </div>
                    </div>
                    <div class="ibox-content">
                        <div class="table-responsive">
                            <table id="table" class="table table-striped table-bordered"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/custom/Utils")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/daterangepicker")
    @Scripts.Render("~/plugins/typehead")
    @Scripts.Render("~/plugins/jqueryFileDownload.js")

    <script>
        window.StartDate = '@Html.Raw(Json.Encode(ViewBag.Date))';
        $(function () {
            var invoices = new ProviderInvoicesControlador('table',
                '@Url.Action("GetInvoicesProvider")',
                '@Url.Action("GetDownloadPDF")',
                '@Url.Action("GetDownloadXML")',
                '@Url.Action("GetAutoComplite")',
                '@hasFullAccessController' == 'True',
                @Html.Raw(position)
            );
            invoices.init();
        });
    </script>
    <script src="~/Scripts/views/Invoicing/ProviderInvoices.js"></script>

}
