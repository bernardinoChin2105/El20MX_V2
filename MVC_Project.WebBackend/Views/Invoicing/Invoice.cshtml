@model  MVC_Project.WebBackend.Models.InvoiceViewModel
@using MVC_Project.WebBackend.AuthManagement
@using MVC_Project.WebBackend.AuthManagement.Models
@{
    ViewBag.Title = "Factura";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    var controllerName = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    AuthUser user = (AuthUser)Authenticator.AuthenticatedUser;
    var hasFullAccessController = user.HasFullAccessController(controllerName);
}

@section styles{
    <link href="~/Content/template/plugins/iCheck/skins/square/blue.css" rel="stylesheet" />
}

<div class="ibox-content p-xl">
    @using (Html.BeginForm("Invoice", "Invoicing", FormMethod.Post, new { @id = "InvoicingForm", @role = "form" }))
    {
        <div class="row">
            <div class="col-12">
                <h3>Información Emisor de Factura</h3>
                <hr />
            </div>
            <div class="col-md-2">
                <img src="@Model.Logo" class="img" />
            </div>
            <div class="col-md-5">
                <h5>Información Emisor de Factura</h5>
                <strong>@Model.BusinessName</strong><br>
                <strong>RFC: @Model.IssuingRFC.</strong><br>
                <abbr title="Email">E-mail:</abbr> @Model.IssuingTaxEmail<br />
                @*<strong>Régimen Fiscal: @Model.IssuingTaxRegime</strong><br>*@
                <div class="form-group row">
                    @Html.LabelFor(m => m.IssuingTaxRegime, new { @class = "col-form-label col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.IssuingTaxRegimeId, Model.ListTaxRegime, "Seleccione...", new { @class = "form-control chosen-select required" })
                        @*@Html.ValidationMessageFor(model => model.allyId)*@
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.PropertyAccountNumber, new { @class = "col-form-label col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.TextBoxFor(m => m.PropertyAccountNumber, new { @class = "form-control", @maxlength = "200", @autocomplete = "off" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.BranchOffice, new { @class = "col-form-label col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.BranchOffice, Model.ListBranchOffice, "Seleccione...", new { @class = "form-control chosen-select required" })
                        @*@Html.ValidationMessageFor(model => model.allyId)*@
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group row">
                    @Html.LabelFor(m => m.TypeInvoice, new { @class = "col-form-label col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.TypeInvoice, Model.ListTypeInvoices, "Seleccione...", new { @class = "form-control chosen-select required" })
                        @*@Html.ValidationMessageFor(model => model.allyId)*@
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.TypeRelationship, new { @class = "col-form-label col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.TypeRelationship, Model.ListTypeRelationship, "Seleccione...", new { @class = "form-control chosen-select required" })
                        @*@Html.ValidationMessageFor(model => model.allyId)*@
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <br />
                <h3>Información Receptor de Factura</h3>
                <hr />
                <h5>Facturar a:</h5>
            </div>
            <div class="col-12">
                <div class="form-group row">
                    @Html.LabelFor(m => m.CustomerName, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control required", @maxlength = "200", @autocomplete = "off" })
                        <input type="hidden" name="CustomerId" id="CustomerId" />
                    </div>
                    @Html.LabelFor(m => m.RFC, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.RFC, new { @class = "form-control required", @maxlength = "200", @autocomplete = "off" })
                        <input type="hidden" name="RFCId" id="RFCId" />
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.Street, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.Street, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })
                    </div>
                    @Html.LabelFor(m => m.OutdoorNumber, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.OutdoorNumber, new { @class = "form-control required", @maxlength = "200", @autocomplete = "off" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.InteriorNumber, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.InteriorNumber, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })
                    </div>
                    @Html.LabelFor(m => m.Colony, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Colony, Model.ListColony.Items as List<SelectListItem>, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.ZipCode, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })
                    </div>
                    @Html.LabelFor(m => m.Municipality, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Municipality, Model.ListMunicipality.Items as List<SelectListItem>, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.State, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.State, Model.ListState.Items as List<SelectListItem>, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                    @Html.LabelFor(m => m.Country, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Country, Model.ListCountry.Items as List<SelectListItem>, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.CustomerEmailId, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.CustomerEmailId, Model.ListCustomerEmail.Items as List<SelectListItem>, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <br />
                <h3>Datos Fiscales para Facturar:</h3>
                <hr />
            </div>

            <div class="col-12">
                <div class="form-group row">
                    @*@Html.LabelFor(m => m.TypeVoucherId, new { @class = "col-form-label col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.TypeVoucherId, Model.ListTypeVoucher, "Seleccione...", new { @class = "form-control chosen-select required" })
                        </div>*@
                    @Html.LabelFor(m => m.SerieFolio, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.SerieFolio, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })
                        @Html.HiddenFor(m => m.Serie)
                        @Html.HiddenFor(m => m.Folio)
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.UseCFDI, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.UseCFDI, Model.ListUseCFDI, "Seleccione...", new { @class = "form-control chosen-select" })
                    </div>
                    @Html.LabelFor(m => m.PaymentForm, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.PaymentForm, Model.ListPaymentForm, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.PaymentMethod, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.PaymentMethod, Model.ListPaymentMethod, "Seleccione...", new { @class = "form-control chosen-select" })
                    </div>
                    @Html.LabelFor(m => m.Currency, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Currency, Model.ListCurrency, "Seleccione...", new { @class = "form-control chosen-select" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.ExchangeRate, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.ExchangeRate, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="i-checks">
                            <label style="font-weight:initial">
                                @Html.CheckBoxFor(m => m.TaxesChk, new { @class = "form-control", name = "current" })
                                @Html.DisplayNameFor(x => x.TaxesChk)
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12">
                <hr />
                <h4>Comercio Internacional: </h4>
            </div>
            <div class="col-12">
                <div class="form-group row">
                    @Html.LabelFor(m => m.CustomsPatent, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.CustomsPatent, Model.ListCustomsPatent.Items as List<SelectListItem>, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                    @Html.LabelFor(m => m.Customs, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Customs, Model.ListCustoms.Items as List<SelectListItem>, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.MotionNumber, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.MotionNumber, Model.ListMotionNumber.Items as List<SelectListItem>, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
            </div>
        </div>

        <div id="taxes" class="row">
            <div class="col-12">
                <br />
                <h3>Impuestos</h3>
                <hr />
            </div>
            <div class="col-12">
                <div class="form-group row">
                    @Html.LabelFor(m => m.Withholdings, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Withholdings, Model.ListWithholdings, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                    @Html.LabelFor(m => m.Transferred, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Transferred, Model.ListTransferred, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.Rate, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Rate, Model.ListRate, "Seleccione...", new { @class = "form-control chosen-select required" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <br />
                <h3>Condiciones y Comentarios a Facturar</h3>
                <hr />
            </div>
            <div class="col-12">
                <div class="form-group row">
                    @Html.LabelFor(m => m.PaymentConditions, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.PaymentConditions, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })
                    </div>
                    @Html.LabelFor(m => m.DiscountRate, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(m => m.DiscountRate, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.Comments, new { @class = "col-form-label col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(m => m.Comments, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })
                        @*@Html.TextBoxFor(m => m.DiscountRate, new { @class = "form-control ", @maxlength = "200", @autocomplete = "off" })*@
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <br />
                <h3>Productos y/o Servicios a facturar:</h3>
                <hr />
            </div>
            <div class="col-md-4 offset-8 text-right">
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-color" data-toggle="modal" data-target="#ServProdModal">Agregar nuevo Servicio o Producto</button>
            </div>
        </div>

        <div class="table-responsive m-t">
            <table class="table invoice-table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Cantidad</th>
                        <th>Código SAT</th>
                        <th>Descripción Producto o Servicio</th>
                        <th>Unidad SAT</th>
                        <th>Precio Unitario</th>
                        <th>% Descuento</th>
                        <th>
                            Impuesto
                            <small>(IVA/IEPS)</small>
                        </th>
                        <th>SubTotal</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ProductServices.Count > 0)
                    {
                        var index = 1;
                        foreach (var item in Model.ProductServices)
                        {
                            <tr>
                                <td>@index</td>
                                <td>@item.Quantity</td>
                                <td>@item.SATCode</td>
                                <td>@item.ProductServiceDescription</td>
                                <td>@item.SATUnit</td>
                                <td>@item.UnitPrice</td>
                                <td>@item.DiscountRate</td>
                                <td>@item.Taxes</td>
                                <td>@item.Subtotal</td>
                            </tr>
                            @(index++);
                        }
                    }
                </tbody>
            </table>
        </div><!-- /table-responsive -->

        @*<input type="hidden" name="TokenId" id="token_id">
            @Html.HiddenFor(m => m.OrderId)
            @Html.HiddenFor(m => m.Amount)
            @Html.AntiForgeryToken()*@
        <table class="table invoice-total">
            <tbody>
                <tr>
                    <td><strong>@Html.LabelFor(m => m.Subtotal, new { @class = " control-label" }) :</strong></td>
                    <td>@Model.Subtotal.ToString("C2")</td>
                </tr>
                <tr>
                    <td><strong>@Html.LabelFor(m => m.TotalDiscount, new { @class = " control-label" }) :</strong></td>
                    <td>@Model.TotalDiscount.ToString("C2")</td>
                </tr>
                <tr>
                    <td><strong>@Html.LabelFor(m => m.TaxTransferred, new { @class = " control-label" }) :</strong></td>
                    <td>@Model.TaxTransferred.ToString("C2")</td>
                </tr>
                <tr>
                    <td><strong>@Html.LabelFor(m => m.TaxWithheldIVA, new { @class = " control-label" }) :</strong></td>
                    <td>@Model.TaxWithheldIVA.ToString("C2")</td>
                </tr>
                <tr>
                    <td><strong>@Html.LabelFor(m => m.TaxWithheldISR, new { @class = " control-label" }) :</strong></td>
                    <td>@Model.TaxWithheldISR.ToString("C2")</td>
                </tr>
                <tr>
                    <td><strong>@Html.LabelFor(m => m.Total, new { @class = " control-label" }) :</strong></td>
                    <td>@Model.Total.ToString("C2")</td>
                </tr>
            </tbody>
        </table>

        <div class="row">
            <div class="col-12">
                <div class="form-group row pull-right">
                    <div class="col-md-10 offset-2 text-right">
                        <a href="#" class='btn btn-white'><i class="fa fa-times"></i> Cancelar</a>
                        @*<a href='@Url.Action("Index", "Plan")' class='btn btn-white'><i class="fa fa-times"></i> Cancelar</a>*@
                        <button type="button" onclick="validarDatos()" class="btn btn-color"> <i class="fa fa-save"></i> Guardar </button>
                        <button type="button" onclick="validarDatos()" class="btn btn-color"> <i class="fa fa-save"></i> Timbrar Factura </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Modal -->
<div class="modal fade" id="ServProdModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar Servicio o Producto</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table invoice-table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Cantidad</th>
                            <th>Código SAT</th>
                            <th>Descripción Producto o Servicio</th>
                            <th>Unidad SAT</th>
                            <th>Precio Unitario</th>
                            <th>% Descuento</th>
                            <th>
                                Impuesto
                                <small>(IVA/IEPS)</small>
                            </th>
                            <th>SubTotal</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*@if (Model.ProductServices.Count > 0)
                            {
                                var index = 1;
                                foreach (var item in Model.ProductServices)
                                {
                                    <tr>
                                        <td>@index</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.SATCode</td>
                                        <td>@item.ProductServiceDescription</td>
                                        <td>@item.SATUnit</td>
                                        <td>@item.UnitPrice</td>
                                        <td>@item.DiscountRate</td>
                                        <td>@item.Taxes</td>
                                        <td>@item.Subtotal</td>
                                    </tr>
                                    @(index++);
                                }
                            }*@
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-color">Agregar</button>
            </div>
        </div>
    </div>
</div>


@section scripts{
    @Scripts.Render("~/custom/Utils")
    @*@Scripts.Render("~/plugins/dataTables")
        @Scripts.Render("~/plugins/daterangepicker")*@
    @Scripts.Render("~/plugins/typehead")
    <script src="~/Scripts/views/Invoicing/Invoice.js"></script>
    <script>

        $(function () {
            var invoices = new InvoiceControlador('table',
                '@Url.Action("GetSearchReceiver")',
                '',//'@Url.Action("GetDownloadPDF")',
                '',// '@Url.Action("GetDownloadXML")',
                '',//'@Url.Action("GetAutoComplite")',
                '@hasFullAccessController' == 'True'
            );
            invoices.init();
        });

        //$.get(self.autocompleteURL, function (data) {
        //    $(".typeahead_2").typeahead({ source: data.Data });
        //}, 'json');
    </script>
    @*@Scripts.Render("~/views/providerInvoices")*@

}