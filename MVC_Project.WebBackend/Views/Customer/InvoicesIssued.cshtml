@model MVC_Project.WebBackend.Models.InvoicesFilter
@using MVC_Project.WebBackend.AuthManagement
@using MVC_Project.WebBackend.AuthManagement.Models
@{
    ViewBag.Title = "Facturas Emitidas";

    var controllerName = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    AuthUser user = (AuthUser)Authenticator.AuthenticatedUser;
    var hasFullAccessController = user.HasFullAccessController(controllerName);
}

@section styles {
    @*
        @Styles.Render("~/plugins/dataTablesStyles")*@
    @*@Styles.Render("~/plugins/daterangepickerStyles")*@
}

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                @using (Html.BeginForm("GetInvoices", "Custumer", FormMethod.Post, new { @id = "SearchForm" }))
                {
                    <div class="ibox-title">
                        <h5>Búsqueda</h5>
                    </div>
                    <div class="ibox-content clearfix">
                        <div class="row">
                            <div class="col-12 col-sm-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Folio, new { @class = "" })
                                    @Html.TextBoxFor(m => m.Folio, new { @Class = "form-control form-control-sm txtFiltro", filtro = "true", filtro_order = "1", @maxlength = "13", @autocomplete = "off" })
                                </div>
                            </div>
                            <div class="col-12 col-sm-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.RFC, new { @class = "" })
                                    @Html.TextBoxFor(m => m.RFC, new { @Class = "form-control form-control-sm txtFiltro", filtro = "true", filtro_order = "1", @maxlength = "13", @autocomplete = "off" })
                                </div>
                            </div>
                            <div class="col-12 col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.MethodPay, new { @class = "col-form-label control-label" })
                                    @Html.DropDownListFor(m => m.MethodPay, Model.ListMethodPay.Items as List<SelectListItem>, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-12 col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.FormPay, new { @class = "col-form-label control-label" })
                                    @Html.DropDownListFor(m => m.FormPay, Model.ListFormPay.Items as List<SelectListItem>, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-12 col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Currency, new { @class = "col-form-label control-label" })
                                    @Html.DropDownListFor(m => m.Currency, Model.ListCurrency.Items as List<SelectListItem>, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-sm-6 col-lg-4">
                                <div class="form-group">
                                    @*col-form-label control-label col-md-2*@
                                    @Html.LabelFor(m => m.RegisterAt, new { @class = "" })
                                    @Html.TextBoxFor(m => m.RegisterAt, new { @Class = "form-control form-control-sm txtFiltro", @readonly = "readonly" })
                                    @Html.EditorFor(x => x.FilterInitialDate, new { htmlAttributes = new { @Class = "form-control-sm form-control hide", id = "FilterInitialDate", @readonly = "readonly", filtro = "true", filtro_order = "1" } })
                                    @Html.EditorFor(x => x.FilterEndDate, new { htmlAttributes = new { @Class = "form-control-sm form-control hide", id = "FilterEndDate", @readonly = "readonly", filtro = "true", filtro_order = "2" } })
                                </div>
                            </div>
                            <div class="col-12 offset-8 col-sm-4 col-lg-4">
                                <br />
                                <button type="button" class="btn btn-sm btn-color btn-filter-rol"><i class="fas fa-search"></i> Buscar</button>
                                &nbsp;
                                <button type="button" id="btnClearForm" class="btn btn-sm btn-default"><i class="fas fa-eraser "></i> Limpiar</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Resultado</h5>
                    @*@if (hasFullAccessController)
                        {
                            <div class="ibox-tools"></div>
                        }*@
                </div>
                <div class="ibox-content">
                    <div class="table-responsive">
                        <table id="table" class="table table-striped table-bordered"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/custom/Utils")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/daterangepicker")
    @Scripts.Render("~/views/customerInvoices")

    <script>
        $(function () {
            var invoices = new CustomerInvoicesControlador('table',
                '@Url.Action("GetInvoices")'
                //'@Url.Action("Edit")',
                //'@Url.Action("ExportListCustomer")',
                //'@Url.Action("CustomerUpload")',
                //'@hasFullAccessController' == 'True'
            );
            invoices.init();
        });
    </script>

}
