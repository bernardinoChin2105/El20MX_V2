@model MVC_Project.WebBackend.Models.UserEditViewModel
@using MVC_Project.Utils;
@{
    ViewBag.Title = "Editar Usuario";
}

@section Styles {
    @Styles.Render("~/Content/template/plugins/chosen/chosenStyles")
    <link href="~/Content/template/plugins/jasny/jasny-bootstrap.min.css" rel="stylesheet" />
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar Usuario</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "EditForm" }))
                    {
                        @Html.HiddenFor(model => model.Uuid)
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Name, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @required = "required", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.Name)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Apellidos, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Apellidos, new { @class = "form-control", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.Apellidos)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Email, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", required = "required", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.MobileNumber, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(m => m.MobileNumber, new { htmlAttributes = new { @class = "form-control", type = "text", data_mask = "9999-99-99-99", placeholder = "", removeMaskOnSubmit = true, greedy = false, @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.MobileNumber)
                                </div>
                            </div>

                            @*<div class="form-group row">
                                    @Html.LabelFor(model => model.Language, new { @class = "col-form-label control-label col-md-2", required = "required" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Language, new { @class = "form-control", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.Language)
                                    </div>
                                </div>*@


                            <div class="form-group row">
                                @Html.LabelFor(model => model.Role, new { @class = "col-form-label control-label col-md-2" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Role, Model.Roles, new { @class = "chosen-select", data_placeholder = "Seleccione una opción", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Role)
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="offset-md-2 col-md-8 text-right">
                                    <a href='@Url.Action("Index", "User")' class='btn btn-white'><i class="fa fa-times"></i> Cancelar</a>
                                    <button type="button" value="Guardar" class="btn btn-color" onclick="validarDatos();"><i class="fa fa-save"></i> Guardar</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/validate")
    <script src="~/Scripts/plugins/jasny/jasny-bootstrap.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            if ('@Model.Status' == '@SystemStatus.ACTIVE.ToString()')
                $("#Email").prop('readonly', true);

            $('.chosen-select').chosen({ width: '100%' });
            $.validator.addMethod("PasswordTrue",
                function (value, element) {
                    return value.match(/^(?=.*\d)(?=.*\W+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/);
                }, "La contraseña debe contener al menos un número, mayúsculas, minúsculas y caracteres especiales"
            );
            $("#EditForm").validate({
                rules: {
                    Name: {
                        required: true,
                    },
                    Email: {
                        required: true,
                    },
                    Role: {
                        required: true,
                    },
                    Apellidos: {
                        required: true,
                    }
                }
                ,
                messages: {
                    Name: {
                        required: "Campo obligatorio",
                    },
                    Email: {
                        required: "Campo obligatorio",
                    },
                    Role: {
                        required: "Campo obligatorio",
                    },
                    Apellidos: {
                        required: "Campo obligatorio",
                    },
                }
            })
        });
        function validarDatos() {
            debugger;
            if (!$('#EditForm').valid()) {
                return;
            }
            $('#EditForm').submit();
        }
    </script>
}