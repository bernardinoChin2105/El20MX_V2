@model MVC_Project.Web.Models.ResetPassword
@{
    Layout = null;
    ViewBag.Title = "Cambiar contraseña";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/plugins/validate")
@Styles.Render("~/plugins/sweetAlertStyles")
@Scripts.Render("~/plugins/sweetAlert")
<!DOCTYPE html>
<html>
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>INSPINIA | Iniciar Sesión</title>

    <link href="~/Content/template/bootstrap.min.css" rel="stylesheet">
    <link href="~/fonts/font-awesome/all.min.css" rel="stylesheet">

    <link href="~/Content/template/animate.css" rel="stylesheet">
    <link href="~/Content/template/style.css" rel="stylesheet">
</head>
<body class="gray-bg">

    <div class="middle-box text-center loginscreen  animated fadeInDown">
        <div>
            <div>

                <h1 class="logo-name">ST</h1>
            </div>
            <h3>@System.Web.Configuration.WebConfigurationManager.AppSettings["AppName"]</h3>

            @if (!string.IsNullOrEmpty(ViewBag.Error))
            {
                <div class="col-lg-12">
                    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
                </div>
            }
            <p>Cambiar contraseña</p>
            @using (Html.BeginForm("Reset", "Auth", FormMethod.Post, new { @id = "passForm", @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Uuid)
                <span class="help-block"></span>
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password", placeholder = "Nueva contraseña", @required = "required" })
                </div>
                <span class="help-block"></span>

                <span class="help-block"></span>
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", type = "password", placeholder = "Confirmar contraseña", @required = "required" })
                </div>
                <span class="help-block"></span>

                @*<div class="form-group">
                        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                        </div>
                    </div>*@
                <div class="form-group">
                    <span class="help-block"></span>
                    <button type="submit" onclick="CambiarContra();" class="btn btn-primary block full-width m-b">Cambiar contraseña</button>
                    <span class="help-block"></span>
                </div>
            }
        </div>
    </div>
</body>
</html>
<script>
    $(document).ready(function () {
        $.validator.addMethod("PasswordTrue",
            function (value, element) {
                return value.match(/^(?=.*\d)(?=.*\W+)(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$/);
            }, "La contraseña debe contener al menos un número, mayúsculas, minúsculas y caracteres especiales"
        );
        $("#passForm").validate({
            rules: {
                Password: {
                    PasswordTrue: true,
                    required: true,
                    minlength: 8
                },
                NewPassword: {
                    minlength: 8,
                    equalTo: "#Password"
                }
            }
            ,
            messages: {
                Password: {
                    required:"Campo obligatorio",
                    minlength: "La contraseña debe ser mínimo de 8 caracteres",
                },
                NewPassword: {
                    required: "Campo obligatorio",
                    minlength: "La contraseña debe ser mínimo de 8 caracteres",
                    equalTo: "La contraseña no coincide"
                }
            }
        })
    });
    function CambiarContra() {
        var validator = $("#passForm").validate();

        if (!$("#passForm").valid()) {
            return;
        } else {
            $("#passForm").attr('disabled', 'disabled');
        }

    }
</script>

